version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - 3000:3000
    container_name: frontend
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - ./config/certs:/home/certs
      - ./frontend/public/:/home/app/public
      - ./frontend/src/:/home/app/src

  backend:
    build: ./backend
    ports:
      - 8000:8000
    container_name: backend
    env_file:
        - .env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./config/certs:/home/certs
      - ./backend/:/home/app

  db:
    image: postgres:16-alpine
    command: "-c ssl=on -c ssl_cert_file=/var/lib/postgresql/certs/server.pem -c ssl_key_file=/var/lib/postgresql/certs/server-key.pem"
    healthcheck:
      test: "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: 5s
      retries: 100
      start_period: 30s
      timeout: 10s
    # ports:
    #   - 5432:5432
    container_name: db
    env_file:
        - .env
    restart: unless-stopped
    volumes:
      - ./config/certs:/var/lib/postgresql/certs
      - ./data:/var/lib/postgresql/data

  ssl:
    build: ./config
    container_name: ssl
    volumes:
      - ./config/certs:/config/certs
