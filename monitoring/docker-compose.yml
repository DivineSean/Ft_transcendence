# Monitoring system docker compose

volumes:
  prometheus:
    name: prometheus
  alertmanager:
    name: alertmanager
  grafana:
    name: grafana

networks:
  ft_transcendence:
    external: true


services:
    prometheus:
      image: prometheus
      build: ./prometheus
      container_name: prometheus
      # depends_on:
      #   nginx:
      #     condition: service_healthy
      ports:
        - 9090:9090
        - 9093:9093
      # hostname: localhost
      env_file:
        - .env
      volumes:
        - prometheus:/var/lib/prometheus
        - alertmanager:/var/lib/alertmanager
      # networks:
      #   - prom-graf
      #   - ft_transcendence
      restart: unless-stopped
      networks:
          - ft_transcendence

    # grafana:
    #   image: grafana
    #   build: ./grafana
    #   container_name: grafana
    #   # depends_on:
    #   #   nginx:
    #   #     condition: service_healthy
    #   ports:
    #     - 3000:3000
    #   env_file:
    #     - .env
    #   volumes:
    #     - grafana:/var/lib/grafana
    #   # networks:
    #   #   - prom-graf 
    #   #   - ft_transcendence
    #   restart: unless-stopped
      # networks:
      #     - ft_transcendence

    # Exporters
    nginx_exporter:
      image: nginx/nginx-prometheus-exporter:1.4.0
      container_name: nginx-exporter
      # depends_on:
      #   nginx:
      #     condition: service_healthy
      env_file:
        - .env
      command:
        - --nginx.scrape-uri=${NGINX_SCRAPE_URI}
      # networks:
      #   - prom-graf
      #   - ft_transcendence
      restart: unless-stopped
      networks:
          - ft_transcendence

    redis-exporter:
      image: oliver006/redis_exporter
      container_name: redis-exporter
      # depends_on:
      #   nginx:
      #     condition: service_healthy
      env_file:
        - .env
      # networks:
      #   - prom-graf
      #   - ft_transcendence
      command:
        - --redis.addr=${REDIS_ADDR}
        - --redis.password=${REDIS_PASSWORD}
      restart: unless-stopped
      networks:
          - ft_transcendence

    postgres-exporter:
      image: prometheuscommunity/postgres-exporter
      container_name: postgres-exporter
      # depends_on:
      #   nginx:
      #     condition: service_healthy
      env_file:
        - .env
      # networks:
      #   - prom-graf
      #   - ft_transcendence
      restart: unless-stopped
      networks:
          - ft_transcendence

    node-exporter:
      image: prom/node-exporter
      container_name: node-exporter
      # depends_on:
      #   nginx:
      #     condition: service_healthy
      # networks:
      #   - prom-graf
      #   - ft_transcendence
      restart: unless-stopped
      networks:
          - ft_transcendence
